{"remainingRequest":"/home/nug/Projects/mevn-item/client/node_modules/babel-loader/lib/index.js!/home/nug/Projects/mevn-item/client/node_modules/eslint-loader/index.js??ref--13-0!/home/nug/Projects/mevn-item/client/src/store/modules/items.js","dependencies":[{"path":"/home/nug/Projects/mevn-item/client/src/store/modules/items.js","mtime":1554946887052},{"path":"/home/nug/Projects/mevn-item/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nug/Projects/mevn-item/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nug/Projects/mevn-item/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/nug/Projects/mevn-item/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar state = {\n  items: []\n};\nvar getters = {\n  allItems: function allItems(state) {\n    return state.items;\n  }\n};\nvar actions = {\n  fetchItems: function () {\n    var _fetchItems = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"http://127.0.0.1:3000/api/items\");\n\n            case 3:\n              response = _context.sent;\n              commit(\"setItems\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function fetchItems(_x) {\n      return _fetchItems.apply(this, arguments);\n    }\n\n    return fetchItems;\n  }(),\n  addItem: function () {\n    var _addItem = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2, name) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return axios.post(\"http://127.0.0.1:3000/api/items\", {\n                name: name\n              });\n\n            case 3:\n              response = _context2.sent;\n              commit(\"newItem\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function addItem(_x2, _x3) {\n      return _addItem.apply(this, arguments);\n    }\n\n    return addItem;\n  }(),\n  deleteItem: function () {\n    var _deleteItem = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref3, _id) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return axios.delete(\"http://127.0.0.1:3000/api/items/\".concat(_id));\n\n            case 3:\n              commit(\"removeItem\", _id);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function deleteItem(_x4, _x5) {\n      return _deleteItem.apply(this, arguments);\n    }\n\n    return deleteItem;\n  }(),\n  updateItem: function () {\n    var _updateItem = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref4, updItem) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return axios.put(\"http://127.0.0.1:3000/api/items/\".concat(updItem._id), updItem);\n\n            case 3:\n              response = _context4.sent;\n              commit(\"updateItem\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function updateItem(_x6, _x7) {\n      return _updateItem.apply(this, arguments);\n    }\n\n    return updateItem;\n  }(),\n  markItem: function () {\n    var _markItem = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(_ref5, mrItem) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              commit(\"markItem\", mrItem);\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function markItem(_x8, _x9) {\n      return _markItem.apply(this, arguments);\n    }\n\n    return markItem;\n  }()\n};\nvar mutations = {\n  setItems: function setItems(state, items) {\n    return state.items = items.map(function (obj) {\n      obj.active = false;\n      return obj;\n    });\n  },\n  newItem: function newItem(state, item) {\n    return state.items.unshift(item);\n  },\n  removeItem: function removeItem(state, _id) {\n    return state.items = state.items.filter(function (item) {\n      return item._id !== _id;\n    });\n  },\n  updateItem: function updateItem(state, updItem) {\n    var index = state.items.findIndex(function (item) {\n      return item._id == updItem._id;\n    });\n\n    if (index !== -1) {\n      state.items.splice(index, 1, updItem);\n    }\n  },\n  markItem: function markItem(state, mrItem) {\n    var index = state.items.findIndex(function (item) {\n      return item._id == mrItem._id;\n    });\n\n    if (index !== -1) {\n      state.items.splice(index, 1, mrItem);\n    }\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/home/nug/Projects/mevn-item/client/src/store/modules/items.js"],"names":["axios","state","items","getters","allItems","actions","fetchItems","commit","get","response","data","addItem","name","post","deleteItem","_id","delete","updateItem","updItem","put","markItem","mrItem","mutations","setItems","map","obj","active","newItem","item","unshift","removeItem","filter","index","findIndex","splice"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nconst state = {\n  items: []\n};\nconst getters = {\n  allItems: state => state.items\n};\nconst actions = {\n  async fetchItems({ commit }) {\n    const response = await axios.get(\"http://127.0.0.1:3000/api/items\");\n    commit(\"setItems\", response.data);\n  },\n  async addItem({ commit }, name) {\n    const response = await axios.post(\"http://127.0.0.1:3000/api/items\", {\n      name\n    });\n    commit(\"newItem\", response.data);\n  },\n  async deleteItem({ commit }, _id) {\n    await axios.delete(`http://127.0.0.1:3000/api/items/${_id}`);\n    commit(\"removeItem\", _id);\n  },\n  async updateItem({ commit }, updItem) {\n    const response = await axios.put(\n      `http://127.0.0.1:3000/api/items/${updItem._id}`,\n      updItem\n    );\n    commit(\"updateItem\", response.data);\n  },\n  async markItem({ commit }, mrItem) {\n    commit(\"markItem\", mrItem);\n  }\n};\nconst mutations = {\n  setItems: (state, items) =>\n    (state.items = items.map(obj => {\n      obj.active = false;\n      return obj;\n    })),\n  newItem: (state, item) => state.items.unshift(item),\n  removeItem: (state, _id) =>\n    (state.items = state.items.filter(item => item._id !== _id)),\n  updateItem: (state, updItem) => {\n    const index = state.items.findIndex(item => item._id == updItem._id);\n    if (index !== -1) {\n      state.items.splice(index, 1, updItem);\n    }\n  },\n  markItem: (state, mrItem) => {\n    const index = state.items.findIndex(item => item._id == mrItem._id);\n    if (index !== -1) {\n      state.items.splice(index, 1, mrItem);\n    }\n  }\n};\nexport default { state, getters, actions, mutations };\n"]}]}